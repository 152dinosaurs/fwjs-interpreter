(prog (stat (expr var tru  = (expr function (params ( x , y )) (block { (stat (expr x) ;) }))) ;) (stat (expr var fls  = (expr function (params ( x , y )) (block { (stat (expr y) ;) }))) ;) (stat (expr var pair  = (expr function (params ( x , y )) (block { (stat (expr function (params ( f )) (block { (stat (expr (expr f) (args ( (expr x) , (expr y) ))) ;) })) ;) }))) ;) (stat (expr var fst  = (expr function (params ( p )) (block { (stat (expr (expr p) (args ( (expr tru) ))) ;) }))) ;) (stat (expr var snd  = (expr function (params ( p )) (block { (stat (expr (expr p) (args ( (expr fls) ))) ;) }))) ;) (stat (expr var p  = (expr (expr pair) (args ( (expr 1) , (expr 2) )))) ;) (stat print ( (expr (expr fst) (args ( (expr p) ))) ) ;) (stat print ( (expr (expr snd) (args ( (expr p) ))) ) ;) (stat (expr var cons  = (expr pair)) ;) (stat (expr var head  = (expr fst)) ;) (stat (expr var tail  = (expr snd)) ;) (stat (expr var isEmpty  = (expr function (params ( lst )) (block { (stat (expr (expr lst ) == (expr null)) ;) }))) ;) (stat (expr var nums  = (expr (expr cons) (args ( (expr 1) , (expr (expr cons) (args ( (expr 2) , (expr (expr cons) (args ( (expr 3) , (expr (expr cons) (args ( (expr 4) , (expr (expr cons) (args ( (expr 5) , (expr (expr cons) (args ( (expr 6) , (expr (expr cons) (args ( (expr 7) , (expr (expr cons) (args ( (expr 8) , (expr (expr cons) (args ( (expr 9) , (expr (expr cons) (args ( (expr 10) , (expr null) ))) ))) ))) ))) ))) ))) ))) ))) ))) )))) ;) (stat (expr var sumList  = (expr function (params ( lst )) (block { (stat (expr (expr if ) (args ( (expr (expr isEmpty) (args ( (expr lst) ))) ))) 0 ;) (stat (expr (expr (expr (expr else head) (args ( (expr lst) ))) + (expr sumList)) (args ( (expr (expr tail) (args ( (expr lst) ))) ))) ;) }))) ;) (stat print ( (expr (expr sumList) (args ( (expr nums) ))) ) ;))
