(prog (stat (expr var tru  = (expr function (params ( x , y )) (block { (stat (expr x) ;) }))) ;) (stat (expr var fls  = (expr function (params ( x , y )) (block { (stat (expr y) ;) }))) ;) (stat (expr var pair  = (expr function (params ( x , y )) (block { (stat (expr function (params ( f )) (block { (stat (expr f (args ( (expr x) , (expr y) ))) ;) })) ;) }))) ;) (stat (expr var fst  = (expr function (params ( p )) (block { (stat (expr p (args ( (expr tru) ))) ;) }))) ;) (stat (expr var snd  = (expr function (params ( p )) (block { (stat (expr p (args ( (expr fls) ))) ;) }))) ;) (stat (expr var p  = (expr pair (args ( (expr 1) , (expr 2) )))) ;) (stat print ( (expr fst (args ( (expr p) ))) ) ;) (stat print ( (expr snd (args ( (expr p) ))) ) ;) (stat (expr var cons  = (expr pair)) ;) (stat (expr var head  = (expr fst)) ;) (stat (expr var tail  = (expr snd)) ;) (stat (expr var isEmpty  = (expr function (params ( lst )) (block { (stat (expr (expr lst ) == (expr null)) ;) }))) ;) (stat (expr var nums  = (expr cons (args ( (expr 1) , (expr cons (args ( (expr 2) , (expr cons (args ( (expr 3) , (expr cons (args ( (expr 4) , (expr cons (args ( (expr 5) , (expr cons (args ( (expr 6) , (expr cons (args ( (expr 7) , (expr cons (args ( (expr 8) , (expr cons (args ( (expr 9) , (expr cons (args ( (expr 10) , (expr null) ))) ))) ))) ))) ))) ))) ))) ))) ))) )))) ;) (stat (expr var sumList  = (expr function (params ( lst )) (block { (stat (expr if  (args ( (expr isEmpty (args ( (expr lst) ))) )) 0) ;) (stat (expr (expr else head (args ( (expr lst) ))) + (expr sumList (args ( (expr tail (args ( (expr lst) ))) )))) ;) }))) ;) (stat print ( (expr sumList (args ( (expr nums) ))) ) ;))
