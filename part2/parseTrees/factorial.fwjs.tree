(prog (stat (expr var factorial  = (expr (expr  function ) (args ( (expr num) )))) <missing ';'>) (stat (expr   {) <missing ';'>) (stat (expr (expr   if ) (args ( (expr (expr num ) == (expr  0)) ))) <missing ';'>) (stat (expr   {)     1 ;) (stat (expr    }) <missing ';'>) (stat (expr  else  {) <missing ';'>) (stat (expr     var tmp  = (expr  num)) ;) (stat (expr (expr     while ) (args ( (expr (expr num ) > (expr  2)) ))) <missing ';'>) (stat (expr   {) <missing ';'>) (stat (expr       num  = (expr (expr  num ) - (expr  1))) ;) (stat (expr       tmp  = (expr (expr  tmp ) * (expr  num))) ;) (stat (expr      })     tmp ;) (stat (expr    } }) ;) (stat (expr var result  = (expr (expr  factorial) (args ( (expr 8) )))) ;) (stat print ( (expr result) ) ;) (stat (expr  ) <missing ';'>))
